from loader import bot
from bot.parser.itproger_parser import ItProgerParser
from bot.keyboards.inline import get_news_keyboard

parser = ItProgerParser()

@bot.callback_query_handler(func=lambda call: call.data == "refresh_news")
def refresh_news_callback(call):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–µ"""
    bot.answer_callback_query(call.id, "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏...")
    
    news = parser.get_news(count=5)
    
    if not news:
        bot.edit_message_text(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            call.message.chat.id,
            call.message.message_id
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    news_text = "<b>üì∞ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ ITproger:</b>\n\n"
    
    for i, item in enumerate(news, 1):
        news_text += f"<b>{i}. {item['title']}</b>\n"
        if item['description']:
            news_text += f"{item['description']}\n"
        if item['date']:
            news_text += f"<i>üìÖ {item['date']}</i>\n"
        news_text += "\n"
    
    bot.edit_message_text(
        news_text,
        call.message.chat.id,
        call.message.message_id,
        reply_markup=get_news_keyboard(news),
        parse_mode='HTML'
    )